server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route   # 路由的id,没有规定规则但要求唯一,建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates: #说穿了只是一组匹配规则
            - Path=/payment/get/**  # 断言，路径相匹配的进行路由
            #- After=2020-10-28T12:27:39.741+08:00[Asia/Shanghai]  #在此时间之后才可以进行访问，否则报错404
            #- Before=2020-10-28T14:27:39.741+08:00[Asia/Shanghai] #在此时间之前才可以进行访问，否则报错404
            #- Between=2020-10-28T12:27:39.741+08:00[Asia/Shanghai],2020-10-28T16:27:39.741+08:00[Asia/Shanghai]  #在这个时间之间的才可以访问
            #- Cookie=username, leelay #表示访问时要加上cookie,否则报错404
            #- Header=X-Request-Id, \d+  #请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Host=**.athuayu.com,**.athuayu.org
            #- Method=GET,POST
            #- Query=username,\d+  #要有参数名username并且值还要是整数才能路由
        - id: payment_route2
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/**   #断言,路径相匹配的进行路由


eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    # 表示是否将自己注册进 EurekaServer 默认为 true
    register-with-eureka: true
    # 是否从 EurekaServer 抓取已有的注册信息，默认为 true. 单节点无所谓，集群必须设置为 true，才能配置 ribbon 使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
      defaultZone: http://eureka7001.com:7001/eureka/